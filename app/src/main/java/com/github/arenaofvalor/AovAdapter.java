package com.github.arenaofvalor;import android.annotation.SuppressLint;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import java.util.List;public class AovAdapter extends RecyclerView.Adapter<AovAdapter.ViewHolder> {    private List<Hero> values;    // Provide a reference to the views for each data item    // Complex data items may need more than one view per item, and    // you provide access to all the views for a data item in a view holder    class ViewHolder extends RecyclerView.ViewHolder {        // each data item is just a string in this case        TextView txtHeader;        TextView txtFooter;        View layout;        public ViewHolder(View v) {            super(v);            layout = v;            txtHeader = (TextView) v.findViewById(R.id.firstLine);            txtFooter = (TextView) v.findViewById(R.id.secondLine);        }    }    public void add(int position, Hero item) {        values.add(position, item);        notifyItemInserted(position);    }    public void remove(int position) {        values.remove(position);        notifyItemRemoved(position);    }    // Provide a suitable constructor (depends on the kind of dataset)    public AovAdapter(List<Hero> myDataset)    {        values = myDataset;    }    // Create new views (invoked by the layout manager)    @NonNull    @Override    public AovAdapter.ViewHolder onCreateViewHolder(            ViewGroup parent,            int viewType) {        // create a new view        LayoutInflater inflater = LayoutInflater.from(parent.getContext());        View v = inflater.inflate(R.layout.my_row, parent, false);        // set the view's size, margins, paddings and layout parameters        ViewHolder viewHolder;        viewHolder = new ViewHolder(v);        return viewHolder;    }    // Replace the contents of a view (invoked by the layout manager)    @SuppressLint("SetTextI18n")    @Override    public void onBindViewHolder(ViewHolder holder, final int position) {        // - get element from your dataset at this position        // - replace the contents of the view with that element        final Hero currentHero = values.get(position);        holder.txtHeader.setText(currentHero.getName());        holder.txtHeader.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                remove(position);            }        });        holder.txtFooter.setText(currentHero.getType());    }    // Return the size of your dataset (invoked by the layout manager)    @Override    public int getItemCount() {        return values.size();    }}