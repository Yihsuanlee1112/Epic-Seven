package com.github.arenaofvalor.presentation.view;import androidx.appcompat.app.AppCompatActivity;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.content.Context;import android.content.SharedPreferences;import android.os.Bundle;import android.widget.Toast;import com.github.arenaofvalor.Constants;import com.github.arenaofvalor.R;import com.github.arenaofvalor.data.ArenaOfValorAPI;import com.github.arenaofvalor.presentation.model.ArenaOfValorResponse;import com.github.arenaofvalor.presentation.model.Hero;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.google.gson.reflect.TypeToken;import java.lang.reflect.Type;import java.util.ArrayList;import java.util.List;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;public class MainActivity extends AppCompatActivity{    private RecyclerView recyclerView ;    private AovAdapter mAdapter;    private RecyclerView.LayoutManager layoutManager;    private List<Hero> AovHeroes = new ArrayList<>();    private SharedPreferences sharedPreferences;    private Gson gson;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        sharedPreferences = getSharedPreferences("Application_esiea", Context.MODE_PRIVATE);        gson = new GsonBuilder()                .setLenient()                .create();        List<Hero> AovHeroes= getDataFromCache();        if(getDataFromCache()!= null)            showList(AovHeroes);        else            APIcall();    }    private List<Hero> getDataFromCache() {        String jsonHero = sharedPreferences.getString(Constants.KEY_HERO_LIST, null) ;        if(jsonHero ==null)            return null;        else {            Type listType = new TypeToken<List<Hero>>() {            }.getType();            return gson.fromJson(jsonHero, listType);        }    }    private void showList(List<Hero> HeroList){        recyclerView =  findViewById(R.id.recyclerView);        // use this setting to        // improve performance if you know that changes        // in content do not change the layout size        // of the RecyclerView        recyclerView.setHasFixedSize(true);        // use a linear layout manager        layoutManager = new LinearLayoutManager(this);        recyclerView.setLayoutManager(layoutManager);        // define an adapter        mAdapter = new AovAdapter(HeroList);        recyclerView.setAdapter(mAdapter);    }    private void APIcall(){        Gson gson = new GsonBuilder()                .setLenient()                .create();        Retrofit retrofit = new Retrofit.Builder()                .baseUrl("https://raw.githubusercontent.com/Yihsuanlee1112/arenaofvalor/master/app/Files/")                .addConverterFactory(GsonConverterFactory.create(gson))                .build();        ArenaOfValorAPI arenaOfValorAPI = retrofit.create(ArenaOfValorAPI.class);        //Log.d("REBECCA", "BEFORE CALLBACK");        Call<ArenaOfValorResponse> call = arenaOfValorAPI.getHeroResponse();        call.enqueue(new Callback<ArenaOfValorResponse>() {            @Override            public void onResponse(Call<ArenaOfValorResponse> call, Response<ArenaOfValorResponse> response) {                //Log.d("REBECCA", "INSIDE CALLBACK");                if(response.isSuccessful()&& response.body()!= null){                    AovHeroes = response.body().getResults();                    saveList(AovHeroes);                    //Toast.makeText(getApplicationContext(), "API Success", Toast.LENGTH_SHORT).show();                    showList(AovHeroes);                    /*for(Hero H: AovHeroes){                        System.out.println(H.getId()+" "+" "+H.getType()+" "+" "+H.getName());                    }System.out.println(AovHeroes.size());                     */                }                else{                    System.out.println("Fail");                }            }            @Override            public void onFailure(Call<ArenaOfValorResponse> call, Throwable t) {                showError();                System.out.println("Fail");            }        });        //Log.d("REBECCA", "AFTER CALLBACK");    }    private void saveList(List<Hero> aovHeroes) {        String jsonString = gson.toJson(AovHeroes);        sharedPreferences                .edit()                .putString(Constants.KEY_HERO_LIST, jsonString)                .apply();       // Toast.makeText(getApplicationContext(), "List save", Toast.LENGTH_SHORT).show();    }    private void showError() {        Toast.makeText(getApplicationContext(), "API Error", Toast.LENGTH_SHORT).show();    }}