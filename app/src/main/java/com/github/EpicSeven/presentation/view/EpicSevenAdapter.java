package com.github.EpicSeven.presentation.view;import android.annotation.SuppressLint;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.github.EpicSeven.R;import com.github.EpicSeven.presentation.model.Hero;import java.util.List;public class EpicSevenAdapter extends RecyclerView.Adapter<EpicSevenAdapter.ViewHolder> {    private List<Hero> values;    //private List<PokeType> types;    private OnItemClickListener listener;    public interface OnItemClickListener {        void onItemClick(Hero item);    }    // Provide a reference to the views for each data item    // Complex data items may need more than one view per item, and    // you provide access to all the views for a data item in a view holder    class ViewHolder extends RecyclerView.ViewHolder {        // each data item is just a string in this case        TextView txtHeader;        TextView txtFooter;        ImageView imageView;        View layout;        public ViewHolder(View v) {            super(v);            layout = v;            txtHeader =  v.findViewById(R.id.firstLine);            txtFooter =  v.findViewById(R.id.secondLine);        }    }    public void add(int position, Hero item) {        values.add(position, item);        notifyItemInserted(position);    }/*    private void addIcon(Hero currentHero, ViewHolder holder) {        boolean imageFound = false;        if (values != null) {            for (int i = 0; i < values.size(); i++) {                if (currentHero.getId().equals(values.get(i).getId())) {                    Picasso.get().load("https://www.serebii.net/pokemongo/pokemon/"+currentHero.getId()+".png").into(holder.imageView);                    imageFound = true;                }                if (!currentHero.getId().equals(values.get(i).getId()) && i == values.size() - 1 && !imageFound) {                    holder.imageView.setImageResource(R.drawable.ic_launcher_background);                    imageFound = false;                }            }        }    } */    // Provide a suitable constructor (depends on the kind of dataset)    public EpicSevenAdapter(List<Hero> myDataset, OnItemClickListener listener)    {        this.values = myDataset;        this.listener = listener;    }    public void setListener(OnItemClickListener listener){        this.listener = listener;    }    // Create new views (invoked by the layout manager)    @NonNull    @Override    public EpicSevenAdapter.ViewHolder onCreateViewHolder(            ViewGroup parent,            int viewType) {        // create a new view        LayoutInflater inflater = LayoutInflater.from(parent.getContext());        View v = inflater.inflate(R.layout.my_row, parent, false);        // set the view's size, margins, paddings and layout parameters        ViewHolder viewHolder;        viewHolder = new ViewHolder(v);        return viewHolder;    }    // Replace the contents of a view (invoked by the layout manager)    @SuppressLint("SetTextI18n")    @Override    public void onBindViewHolder(ViewHolder holder, final int position) {        //boolean imageFound = false;        // - get element from your dataset at this position        // - replace the contents of the view with that element         final Hero currentHero = values.get(position);        //final PokeType currentType = types.get(position);        holder.txtHeader.setText(currentHero.getName());        holder.txtFooter.setText(currentHero.getRole());        //Picasso.get().load("https://www.serebii.net/pokemongo/pokemon/"+currentHero.getId()+".png").into(holder.imageView);        /*        if (values != null) {            for (int i = 0; i < values.size(); i++) {                if (currentHero.getId().equals(values.get(i).getId())) {                    Picasso.get().load("https://www.serebii.net/pokemongo/pokemon/"+currentHero.getId()+".png").into(holder.imageView);                    imageFound = true;                }                if (!currentHero.getId().equals(values.get(i).getId()) && i == values.size() - 1 && !imageFound) {                    holder.imageView.setImageResource(R.drawable.ic_launcher_background);                    imageFound = false;                }            }        }         */        holder.itemView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                //remove(position);                listener.onItemClick(currentHero);            }        });    }    // Return the size of your dataset (invoked by the layout manager)    @Override    public int getItemCount() {        return values.size();    }}